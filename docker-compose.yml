version: '3'

services:
  openapi:
    build: ./docker/openapi
    profiles: [ "debug" ]
    container_name: ${CONTAINER_NAME_PREFIX}_openapi
    volumes:
      - ${PWD}/generated/openapi/openapi.json:/app/generated/openapi/openapi.json
      - ${PWD}/openapi:/app/src
      - ${PWD}/docker/openapi/package.json:/app/package.json
    tty: true

  prism:
    build: ./docker/prism
    container_name: ${CONTAINER_NAME_PREFIX}_prism
    profiles: [ "debug" ]
    depends_on:
      - openapi
    command: 'mock -h 0.0.0.0 -d /app/openapi.json'
    volumes:
      - ${PWD}/generated/openapi/openapi.json:/app/openapi.json
    ports:
      - "${PRISM_CLIENT_PORT}:4010"

  swagger-ui:
    build: ./docker/swagger_ui_react
    container_name: ${CONTAINER_NAME_PREFIX}_swagger-ui
    profiles: [ "debug" ]
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=${SWAGGER_UI_CLIENT_PORT}
    volumes:
      - ${PWD}/docker/swagger_ui_react/public:/app/html/public
      - ${PWD}/docker/swagger_ui_react/src:/app/html/src
      - ${PWD}/generated/openapi/openapi.json:/app/html/public/openapi.json
    command: sh -c "yarn start"
    ports:
      - "${SWAGGER_UI_CLIENT_PORT}:${SWAGGER_UI_CLIENT_PORT}"
    working_dir: /app/html
    tty: true

  schemaspy_mysql:
    image: schemaspy/schemaspy
    container_name: ${CONTAINER_NAME_PREFIX}_schemaspy_mysql
    profiles: [ "debug" ]
    volumes:
      - ${PWD}/schemaspy/mysql/output:/output
      - ${PWD}/Docker/schemaspy/drivers/mysql:${MYSQL_DRIVERS_DIR}
    depends_on:
      - mysql
    command: >
      java -jar schemaspy.jar
      -t ${MYSQL_DB_TYPE}
      -host ${MYSQL_HOST}
      -port ${MYSQL_INTERNAL_PORT}
      -db ${MYSQL_DATABASE}
      -u root
      -p ${MYSQL_ROOT_PASSWORD}
      -s ${MYSQL_SCHEMA}
      -connprops allowPublicKeyRetrieval\\=false useSSL\\=false

  nginx-web-develop:
    image: nginx:1.13.9-alpine
    container_name: ${CONTAINER_NAME_PREFIX}_nginx-web-develop
    volumes:
      # nginx.conf
      - ${PWD}/docker/nginx-web-develop/default.conf:/etc/nginx/conf.d/default.conf:ro
      # schemaspy
      - ${PWD}/schemaspy/mysql/output:/var/www/html/schemaspy/mysql:ro
      - ${PWD}/docker/nginx-web-develop/schemaspy.conf:/etc/nginx/conf.d/schemaspy.conf:ro
      # web-develop index
      - ${PWD}/php-fpm-web-develop/src:/usr/share/nginx/html
    #      - ${PWD}/.env:/usr/share/nginx/html/.env
    ports:
      - ${NGINX_SCHEMASPY_MYSQL_EXTERNAL_PORT}:${NGINX_SCHEMASPY_MYSQL_INTERNAL_PORT}
      - ${NGINX_EXTERNAL_PORT}:${NGINX_INTERNAL_PORT}

    environment:
      - LANG=ja_JP.UTF-8
      - TZ=Asia/Tokyo
    command: "nginx -g 'daemon off;'"

  php-fpm-web-develop:
    build: ./docker/php-fpm-web-develop
    container_name: ${CONTAINER_NAME_PREFIX}_php-fpm-web-develop
    volumes:
      - ${PWD}/php-fpm-web-develop/src:/usr/share/nginx/html
    env_file:
      - .env
    working_dir: /usr/share/nginx/html

  nginx-app:
    container_name: ${CONTAINER_NAME_PREFIX}_nginx-app
    build: ./docker/nginx-app
    ports:
      - ${APP_EXTERNAL_PORT}:${APP_INTERNAL_PORT}
    environment:
      - FRAMEWORK:${FRAMEWORK}
    depends_on:
      - ${FRAMEWORK}
    volumes:
      - ${PWD}/fw/${FRAMEWORK}:/src
      - ${PWD}/docker/${FRAMEWORK}/default.conf:/etc/nginx/conf.d/default.conf
      - ${PWD}/docker/${FRAMEWORK}/log:/var/log/nginx
  # Todo     - ./docker/laravel_nginx/logs:/src/docker/nginx/logs

  laravel9:
    build: ./docker/${FRAMEWORK}
    profiles: [ "debug" ]
    container_name: ${CONTAINER_NAME_PREFIX}_laravel9
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${PWD}/fw/${FRAMEWORK}:/src
      - ${PWD}/docker/${FRAMEWORK}/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ${PWD}/docker/${FRAMEWORK}/php.ini:/usr/local/etc/php/php.ini
    environment:
      XDEBUG_PORT: ${XDEBUG_PORT}
      XDEBUG_KEY: ${XDEBUG_KEY}
    working_dir: /src

  cake3:
    build: ./docker/${FRAMEWORK}
    container_name: ${CONTAINER_NAME_PREFIX}_cake3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${PWD}/fw/${FRAMEWORK}:/src
      - ${PWD}/docker/${FRAMEWORK}/xdebug.ini:/vsr/local/etc/php/conf.d/xdebug.ini
    environment:
      XDEBUG_PORT: ${XDEBUG_PORT}
      XDEBUG_KEY: ${XDEBUG_KEY}
    working_dir: /src

  mysql:
    build: ./docker/mysql
    container_name: ${CONTAINER_NAME_PREFIX}_mysql
    #    user: "999:999"
    volumes:
      - ${PWD}/docker/mysql/my.cnf:/etc/my.cnf
      #- ${PWD}/docker/mysql/data:/var/lib/mysql
      - volume-webdevelop-mysql:/var/lib/mysql
      - ${PWD}/docker/mysql/backup:/mysql_backup:rwx
      - ${PWD}/docker/mysql/init:/docker-entrypoint-initdb.d
    #      - ${PWD}/docker/mysql/logs:/var/log/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${TZ}
    ports:
      - ${MYSQL_EXTERNAL_PORT}:${MYSQL_INTERNAL_PORT}
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb_use_native_aio=0


  redis:
    image: redis:alpine
    container_name: ${CONTAINER_NAME_PREFIX}_redis
    ports:
      - ${REDIS_EXTERNAL_PORT}:${REDIS_INTERNAL_PORT}

  elasticsearch:
    build: ./docker/elasticsearch
    container_name: ${CONTAINER_NAME_PREFIX}_elasticsearch
    profiles: [ "debug" ]
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.monitoring.collection.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms512M -Xmx512M"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - ${ELASTICSEARCH_EXTERNAL_PORT1}:${ELASTICSEARCH_INTERNAL_PORT1}
      - ${ELASTICSEARCH_EXTERNAL_PORT2}:${ELASTICSEARCH_INTERNAL_PORT2}
    tty: true

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.2
    container_name: ${CONTAINER_NAME_PREFIX}_kibana
    profiles: [ "debug" ]
    ports:
      - ${KIBANA_EXTERNAL_PORT}:${KIBANA_INTERNAL_PORT}
    mem_limit: 1g
    memswap_limit: 1g
    environment:
      #- ELASTICSEARCH_HOSTS = http://elasticsearch:${ELASTICSEARCH_INTERNAL_PORT1}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      #- ELASTICSEARCH_HOSTS='["http://elasticsearch:9200"]'
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - SERVER_PUBLICBASEURL=http://host.docker.internal:${KIBANA_EXTERNAL_PORT}
      #- XPACK_SECURITY_ENABLED=false
    depends_on:
      - elasticsearch

networks:
  default:
    external: false
volumes:
  volume-webdevelop-mysql:
    name: ${CONTAINER_NAME_PREFIX}_mysql
    labels:
      keep: true
